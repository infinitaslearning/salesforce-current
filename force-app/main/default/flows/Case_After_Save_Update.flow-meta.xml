<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Get_number_of_linked_Articles</name>
        <label>Get number of linked Articles</label>
        <locationX>1249</locationX>
        <locationY>3839</locationY>
        <actionName>CASE_CaseHelper</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Assign_Article_Count</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>inputCase</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputParameters>
        <nameSegment>CASE_CaseHelper</nameSegment>
        <outputParameters>
            <assignToReference>Result</assignToReference>
            <name>output</name>
        </outputParameters>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Add1toQueueDeveloperNameinList</name>
        <label>Add 1 to QueueDeveloperName in List</label>
        <locationX>1139</locationX>
        <locationY>4595</locationY>
        <assignmentItems>
            <assignToReference>QueueDeveloperNameInList</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Compare_Queues</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Article_Count</name>
        <label>Assign Article Count</label>
        <locationX>1249</locationX>
        <locationY>3947</locationY>
        <assignmentItems>
            <assignToReference>$Record.AttachedArticleCount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetResult</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Email</name>
        <label>Assign Email</label>
        <locationX>1348</locationX>
        <locationY>3539</locationY>
        <assignmentItems>
            <assignToReference>$Record.Email__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>form_SetEmail</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Case_of_Type_Problem</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Complete_Milestone</name>
        <label>Complete 1st Milestone</label>
        <locationX>1029</locationX>
        <locationY>2171</locationY>
        <assignmentItems>
            <assignToReference>sov_milestone.CompletionDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Timenow</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Milestone</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Complete_Resolution_Milestone</name>
        <label>Complete Resolution Milestone</label>
        <locationX>2426</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>sov_milestone.CompletionDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Timenow</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>sov_milestone.IsCompleted</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_MilestoneR</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_1_of_Set_to_Case_Owner_Queue</name>
        <label>Set Queue Name as Case Owner</label>
        <locationX>1546</locationX>
        <locationY>839</locationY>
        <assignmentItems>
            <assignToReference>$Record.QueueName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueDeveloperName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:Group.DeveloperName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>First_Response_Milestone_False</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Contact_Email_Hidden</name>
        <label>Set Email</label>
        <locationX>1194</locationX>
        <locationY>3155</locationY>
        <assignmentItems>
            <assignToReference>$Record.Email__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ContactEmail</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Email_Empty</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_First_Response_Milestone_Ended</name>
        <label>Set &quot;First Response Milestone&quot;= Ended</label>
        <locationX>1161</locationX>
        <locationY>1847</locationY>
        <assignmentItems>
            <assignToReference>$Record.FirstResponseMilestoneEnded__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_First_Response_Milestone</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_PE_HE</name>
        <label>Set PE/HE</label>
        <locationX>842</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>$Record.QueueName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Origin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Queue_name</name>
        <label>Set Queue name</label>
        <locationX>1810</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>$Record.QueueName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueDeveloperName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Owner:Group.DeveloperName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>First_Response_Milestone_False</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Queue_to_Primary_Education</name>
        <label>Set Queue to Primary Education</label>
        <locationX>314</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>$Record.QueueName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Origin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Queue_to_Secondary_Education</name>
        <label>Set Queue to Secondary Education</label>
        <locationX>578</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>$Record.QueueName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Origin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_QueueName_To_Service_Generic</name>
        <label>Set QueueName To Service Generic</label>
        <locationX>50</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>$Record.QueueName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Origin</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_to_Tech_Help</name>
        <label>Set to Tech Help</label>
        <locationX>1106</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>$Record.QueueName__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.QueueID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sov_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Origin</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>This decision checks if an article is attached to the Case and if the Owner entered upon save is a queue or a user</description>
        <name>Article_Count_1</name>
        <label>Article Count &lt; 1 and new Owner is queue</label>
        <locationX>1249</locationX>
        <locationY>4163</locationY>
        <defaultConnectorLabel>Article(s) attached and/or Owner is User</defaultConnectorLabel>
        <rules>
            <name>NoArticle</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetResult</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queues_that_need_Article_validation</targetReference>
            </connector>
            <label>No article and Owner is Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Case_of_Type_Problem</name>
        <label>Case of Type Problem or Migrated Case?</label>
        <locationX>1480</locationX>
        <locationY>3731</locationY>
        <defaultConnector>
            <targetReference>Update_Problem_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes, Problem or migrated</defaultConnectorLabel>
        <rules>
            <name>No_QuestionIncident</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Problem</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OldId__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_number_of_linked_Articles</targetReference>
            </connector>
            <label>No, Question or Incident</label>
        </rules>
    </decisions>
    <decisions>
        <name>Contact_Email_Changed</name>
        <label>Contact has Changed?</label>
        <locationX>1480</locationX>
        <locationY>2939</locationY>
        <defaultConnector>
            <targetReference>Email_Empty</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Contact_Email_CHange</name>
            <conditionLogic>1 AND ( 2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Solved</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Web_Email_equal_Email</targetReference>
            </connector>
            <label>Contact Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Copy_1_of_1st_milestone_exists</name>
        <label>Resolution milestone exists?</label>
        <locationX>2558</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>sov_milestone.CaseId</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Complete_Resolution_Milestone</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Copy_1_of_If_Status_Changed</name>
        <label>Status Changed</label>
        <locationX>1315</locationX>
        <locationY>1739</locationY>
        <defaultConnector>
            <targetReference>Update_Case_Origin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_Status_changed_From_New_or_Open</name>
            <conditionLogic>1 AND ((2 AND 3) OR (4 AND 5))</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_First_Response_Milestone_Ended</targetReference>
            </connector>
            <label>From New or Open</label>
        </rules>
    </decisions>
    <decisions>
        <description>Does the queue that is chosen upon save on this Case match the list of queues that need Article validation?</description>
        <name>Does_Queue_match</name>
        <label>Does Queue match?</label>
        <locationX>1271</locationX>
        <locationY>4487</locationY>
        <defaultConnector>
            <targetReference>Compare_Queues</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Match</defaultConnectorLabel>
        <rules>
            <name>Match</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>QueueDeveloperNameToCheck</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Compare_Queues.QueueDeveloperName__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add1toQueueDeveloperNameinList</targetReference>
            </connector>
            <label>Match</label>
        </rules>
    </decisions>
    <decisions>
        <name>Email_Empty</name>
        <label>Email Empty</label>
        <locationX>1480</locationX>
        <locationY>3431</locationY>
        <defaultConnector>
            <targetReference>Case_of_Type_Problem</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_EmailEmpty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Email</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>First_Response_Milestone_False</name>
        <label>First Response Milestone False?</label>
        <locationX>1480</locationX>
        <locationY>1631</locationY>
        <defaultConnector>
            <targetReference>Update_Case_Origin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>False</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.FirstResponseMilestoneEnded__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OperatingCompany__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Liber</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_If_Status_Changed</targetReference>
            </connector>
            <label>False</label>
        </rules>
    </decisions>
    <decisions>
        <name>Origin</name>
        <label>Origin</label>
        <locationX>710</locationX>
        <locationY>1247</locationY>
        <defaultConnector>
            <targetReference>First_Response_Milestone_False</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Phone</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Phone</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Case_Comment_Phone</targetReference>
            </connector>
            <label>Phone</label>
        </rules>
    </decisions>
    <decisions>
        <description>To check if this queue needs to be validated on article presence before assigning the case</description>
        <name>Queueneedstobevalidatedonarticle</name>
        <label>Queue needs to be validated on article?</label>
        <locationX>1051</locationX>
        <locationY>4871</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesValidationNeeded</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>QueueDeveloperNameInList</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Custom_Error_Message_1</targetReference>
            </connector>
            <label>Yes validation needed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Resolved</name>
        <label>Resolved?</label>
        <locationX>2019</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Get_Resolution_Milestone</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Case Resolved</defaultConnectorLabel>
        <rules>
            <name>Status_Resolved</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Solved</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StatusChangedToPending</targetReference>
            </connector>
            <label>Default Outcome</label>
        </rules>
    </decisions>
    <decisions>
        <name>StatusChangedToPending</name>
        <label>Status changed to Pending?</label>
        <locationX>1480</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Type_of_change</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Pending</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Uncheck_Pending_Case_Reminder_Sent</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Type_of_change</name>
        <label>Type of change</label>
        <locationX>1480</locationX>
        <locationY>731</locationY>
        <defaultConnector>
            <targetReference>First_Response_Milestone_False</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>It_is_new</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>What_Segment</targetReference>
            </connector>
            <label>It is new Case</label>
        </rules>
        <rules>
            <name>Outcome_3_of_Type_of_change</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Set_to_Case_Owner_Queue</targetReference>
            </connector>
            <label>Owner is Queue</label>
        </rules>
        <rules>
            <name>If_Owner_is_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Who_is_owner</targetReference>
            </connector>
            <label>Queue Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Update_Case_Origin</name>
        <label>Update Case Origin</label>
        <locationX>1480</locationX>
        <locationY>2639</locationY>
        <defaultConnector>
            <targetReference>Contact_Email_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Chat_Description</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Chat</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Description</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Description</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Comment_Chat</targetReference>
            </connector>
            <label>Chat Description</label>
        </rules>
    </decisions>
    <decisions>
        <name>Web_Email_equal_Email</name>
        <label>Web Email equal Email?</label>
        <locationX>1326</locationX>
        <locationY>3047</locationY>
        <defaultConnector>
            <targetReference>Email_Empty</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YesWeb</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Contact_Email_Hidden</targetReference>
            </connector>
            <label>Yes WebEmail != Email</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_Segment</name>
        <label>What Segment</label>
        <locationX>710</locationX>
        <locationY>839</locationY>
        <defaultConnector>
            <targetReference>Origin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>General</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CategoryLevel1__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>General</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Problem</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_ID_and_Name_G</targetReference>
            </connector>
            <label>General</label>
        </rules>
        <rules>
            <name>Primary_Education</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CategoryLevel1__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Primary Education</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Problem</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Get_Queue_ID_and_Name_PE</targetReference>
            </connector>
            <label>Primary Education</label>
        </rules>
        <rules>
            <name>Secondary_education</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CategoryLevel1__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Secondary Education</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Problem</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_2_of_Get_Queue_ID_and_Name_SE</targetReference>
            </connector>
            <label>Secondary education</label>
        </rules>
        <rules>
            <name>Vocational_Education</name>
            <conditionLogic>1 AND (2 OR 3 )AND 4</conditionLogic>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CategoryLevel1__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Vocational Education</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CategoryLevel1__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Higher Education</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Problem</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_ID_and_Name_VE</targetReference>
            </connector>
            <label>Vocational/Higher Education</label>
        </rules>
        <rules>
            <name>Case_is_Type_Problem</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Problem</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_ID_and_Name_Tech</targetReference>
            </connector>
            <label>Case is Type Problem</label>
        </rules>
    </decisions>
    <decisions>
        <name>Who_is_owner</name>
        <label>Who is owner?</label>
        <locationX>1942</locationX>
        <locationY>839</locationY>
        <defaultConnector>
            <targetReference>First_Response_Milestone_False</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Queue_is_owner</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsOwnerQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Queue_name</targetReference>
            </connector>
            <label>Queue is owner</label>
        </rules>
    </decisions>
    <decisions>
        <name>X1st_milestone_exist</name>
        <label>1st milestone exists?</label>
        <locationX>1161</locationX>
        <locationY>2063</locationY>
        <defaultConnector>
            <targetReference>Update_Case_Origin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>sov_milestone.CaseId</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Complete_Milestone</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>MR - Add auto closure milestone
MR - Added Contact &quot;Email&quot;  field mapping
MV - Added exclusion for migrated cases (OldId)
MR - Move Before Save here 1.0
MR - Add Outcome to &quot;It is New Case&quot;</description>
    <environments>Default</environments>
    <formulas>
        <name>check_sla</name>
        <dataType>DateTime</dataType>
        <expression>{!$Record.SlaExitDate}</expression>
    </formulas>
    <formulas>
        <name>form_SetEmail</name>
        <dataType>String</dataType>
        <expression>IF({!$Record.SuppliedEmail} != null, {!$Record.SuppliedEmail},
( IF({!$Record.ContactEmail} != null , {!$Record.ContactEmail} , 
IF({!$Record.Account.Email__c} !=null, {!$Record.Account.Email__c}, null)
) )
)</expression>
    </formulas>
    <formulas>
        <name>GetResult</name>
        <dataType>Number</dataType>
        <expression>VALUE({!Result})</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <description>To check if the Owner that was chosen upon the save of the case is a queue</description>
        <name>IsOwnerQueue</name>
        <dataType>Boolean</dataType>
        <expression>IF(BEGINS({!$Record.OwnerId},&apos;00G&apos;),True,False)</expression>
    </formulas>
    <formulas>
        <name>MilestoneFirstResponseID</name>
        <dataType>String</dataType>
        <expression>{!$Label.MilestoneIDFirstResponce}</expression>
    </formulas>
    <formulas>
        <name>Timenow</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <interviewLabel>Case - After Save Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - After Save Update</label>
    <loops>
        <description>This loop compares the list of queues that need article validation agains the queue that is</description>
        <name>Compare_Queues</name>
        <label>Compare Queues</label>
        <locationX>1051</locationX>
        <locationY>4379</locationY>
        <collectionReference>Get_Queues_that_need_Article_validation</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Does_Queue_match</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Queueneedstobevalidatedonarticle</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Case_Comment_Chat</name>
        <label>Case Comment Chat</label>
        <locationX>1348</locationX>
        <locationY>2747</locationY>
        <connector>
            <targetReference>Contact_Email_Changed</targetReference>
        </connector>
        <inputAssignments>
            <field>Body</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsRichText</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Published</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>$Record.Subject</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>TextPost</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Visibility</field>
            <value>
                <stringValue>AllUsers</stringValue>
            </value>
        </inputAssignments>
        <object>FeedItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Case_Comment_Phone</name>
        <label>Create Case Comment Phone</label>
        <locationX>578</locationX>
        <locationY>1355</locationY>
        <connector>
            <targetReference>First_Response_Milestone_False</targetReference>
        </connector>
        <inputAssignments>
            <field>Body</field>
            <value>
                <elementReference>$Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsRichText</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Published</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>$Record.Subject</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>TextPost</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Visibility</field>
            <value>
                <stringValue>AllUsers</stringValue>
            </value>
        </inputAssignments>
        <object>FeedItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Copy_1_of_Get_Queue_ID_and_Name_PE</name>
        <label>Get Queue ID and Name PE</label>
        <locationX>314</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Queue_to_Primary_Education</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NoordhoffServicesPE</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>sov_Queue</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Copy_2_of_Get_Queue_ID_and_Name_SE</name>
        <label>Get Queue ID and Name SE</label>
        <locationX>578</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Queue_to_Secondary_Education</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NoordhoffServicesSE</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>sov_Queue</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_First_Response_Milestone</name>
        <label>Get First Response Milestone</label>
        <locationX>1161</locationX>
        <locationY>1955</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>X1st_milestone_exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CaseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>MilestoneTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>MilestoneFirstResponseID</elementReference>
            </value>
        </filters>
        <object>CaseMilestone</object>
        <outputReference>sov_milestone</outputReference>
        <queriedFields>IsCompleted</queriedFields>
        <queriedFields>CompletionDate</queriedFields>
        <queriedFields>CaseId</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_ID_and_Name_G</name>
        <label>Get Queue ID and Name General</label>
        <locationX>50</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_QueueName_To_Service_Generic</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NoordhoffServices</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>sov_Queue</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_ID_and_Name_Tech</name>
        <label>Get Queue ID and Name Tech</label>
        <locationX>1106</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_to_Tech_Help</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NoordhoffTH</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>sov_Queue</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_ID_and_Name_VE</name>
        <label>Get Queue ID and Name VE</label>
        <locationX>842</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_PE_HE</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>NoordhoffServicesVEHE</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>sov_Queue</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Queues_that_need_Article_validation</name>
        <label>Get Queues that need Article validation</label>
        <locationX>1051</locationX>
        <locationY>4271</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Compare_Queues</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>QueueDeveloperName__c</field>
            <operator>NotEqualTo</operator>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>CaseQueuewithArticleValidation__mdt</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>QueueDeveloperName__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Resolution_Milestone</name>
        <label>Get Resolution Milestone</label>
        <locationX>2558</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Copy_1_of_1st_milestone_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CaseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>MilestoneTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.MilestoneIDResolution</elementReference>
            </value>
        </filters>
        <object>CaseMilestone</object>
        <outputReference>sov_milestone</outputReference>
        <queriedFields>IsCompleted</queriedFields>
        <queriedFields>CompletionDate</queriedFields>
        <queriedFields>CaseId</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>Uncheck_Pending_Case_Reminder_Sent</name>
        <label>Uncheck Pending Case Reminder Sent if checked</label>
        <locationX>1348</locationX>
        <locationY>539</locationY>
        <connector>
            <targetReference>Type_of_change</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PendingCaseReminderSent__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <inputAssignments>
            <field>PendingCaseReminderSent__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>1249</locationX>
        <locationY>4055</locationY>
        <connector>
            <targetReference>Article_Count_1</targetReference>
        </connector>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Milestone</name>
        <label>Update Milestone</label>
        <locationX>1029</locationX>
        <locationY>2279</locationY>
        <connector>
            <targetReference>Update_Case_Origin</targetReference>
        </connector>
        <inputReference>sov_milestone</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_MilestoneR</name>
        <label>Update Milestone</label>
        <locationX>2426</locationX>
        <locationY>755</locationY>
        <inputReference>sov_milestone</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Problem_Case</name>
        <label>Update Problem Case</label>
        <locationX>1711</locationX>
        <locationY>3839</locationY>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>1893</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Resolved</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <name>QueueDeveloperNameInList</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>This field holds the Queue DeveloperName of the Case that triggered this flow. Hence the Queue that the user</description>
        <name>QueueDeveloperNameToCheck</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.Owner:Group.DeveloperName</elementReference>
        </value>
    </variables>
    <variables>
        <name>QueueID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>QueueName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Result</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>sov_milestone</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>CaseMilestone</objectType>
    </variables>
    <variables>
        <name>sov_Queue</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Group</objectType>
    </variables>
</Flow>
